plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.openapi.generator'  version '5.3.0'
}

apply plugin: "org.openapi.generator"

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/Helloworld.yaml".toString()
    outputDir = "$buildDir/gen".toString()
    apiPackage = "com.example.tutorial"
    invokerPackage = "com.example.tutorial.invoker"
    modelPackage = "com.example.tutorial.model"
    configOptions = [
            dateLibrary: "java8" ,
            interfaceOnly: "true"

    ]
    globalProperties = [
            modelDocs: "false"
    ]
    skipValidateSpec = true
    logToStderr = true
    generateAliasAsModel = false
    // set to true and set environment variable {LANG}_POST_PROCESS_FILE
    // (e.g. SCALA_POST_PROCESS_FILE) to the linter/formatter to be processed.
    // This command will be passed one file at a time for most supported post processors.
    enablePostProcessFile = false
}

compileJava.dependsOn tasks.openApiGenerate

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    //implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.307')
    implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
