version: "3.9"
services:
  db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=gogz
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - '3306:3306'
    expose:
      - '3306'
    command: --init-file /docker-entrypoint-initdb.d/init.sql
    volumes:
      - db:/var/lib/mysql
      - ./db/createDatabase.sql:/docker-entrypoint-initdb.d/init.sql

  dynamodb:
    image: amazon/dynamodb-local
    container_name: my-dynamodb
    hostname: dynamodb
    restart: always
    volumes:
      - ./my-dynamodb-data:/home/dynamodblocal/data
    ports:
      - 8000:8000
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/"

  redis:
    image: "redis:latest"
    container_name: "my-redis-container"
    ports:
      - "6379:6379"
    volumes:
      - "redis-data:/data"
    command: [ "redis-server", "--appendonly", "yes" ]

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6380:6380"
      - "8001:8001"  # Redis Stack Management UI
    volumes:
      - redis-data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  db:
    driver: local
  redis-data: